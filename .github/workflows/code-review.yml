name: Advanced Code Quality Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write  # allows Prettier auto-fix commits

jobs:
  quality-checks:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: npm ci || npm install

      # 4️⃣ TypeScript type check (if applicable)
      - name: Run TypeScript type check
        run: |
          if [ -f "tsconfig.json" ]; then
            echo "Running TypeScript type check..."
            npx tsc --noEmit
          else
            echo "No tsconfig.json found, skipping type check."
          fi

      # 5️⃣ Prettier auto-fix and commit back
      - name: Run Prettier auto-fix
        run: |
          echo "Running Prettier auto-fix..."
          npx prettier --write "**/*.{js,jsx,ts,tsx,json,css,md}"
          if [ -n "$(git status --porcelain)" ]; then
            echo "Prettier fixed some files, committing changes..."
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add .
            git commit -m "style: auto-format code with Prettier [skip ci]" || echo "No changes to commit"
            git push
          else
            echo "No formatting issues found."
          fi

      # 6️⃣ Linting
      - name: Run ESLint analysis
        run: |
          echo "Running ESLint..."
          npm run lint --if-present

      # 7️⃣ Tests with coverage enforcement
      - name: Run Jest tests with coverage
        env:
          CI: true
        run: |
          echo "Running Jest tests..."
          npm test -- --coverage --coverageThreshold='{"global":{"branches":80,"functions":80,"lines":80,"statements":80}}'

      # 8️⃣ Security vulnerability audit
      - name: Run npm security audit
        run: |
          echo "Running npm audit for vulnerabilities..."
          npm audit --audit-level=high

      # 9️⃣ Dependency review (only for PRs)
      - name: Dependency change review
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high
          comment-summary-in-pr: true

      # 🔟 Optional static security analysis
      - name: Run ESLint security plugin (optional)
        run: |
          if npm ls eslint-plugin-security > /dev/null 2>&1; then
            echo "Running security linting..."
            npx eslint . --ext .js,.ts --plugin security
          else
            echo "eslint-plugin-security not installed, skipping static security analysis."
          fi
